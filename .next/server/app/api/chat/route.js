"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/route";
exports.ids = ["app/api/chat/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2Fhome%2Fkali%2FDesktop%2Fneura-ai%20(copy%201)%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fkali%2FDesktop%2Fneura-ai%20(copy%201)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2Fhome%2Fkali%2FDesktop%2Fneura-ai%20(copy%201)%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fkali%2FDesktop%2Fneura-ai%20(copy%201)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_kali_Desktop_neura_ai_copy_1_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/chat/route.ts */ \"(rsc)/./app/api/chat/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/route\",\n        pathname: \"/api/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/route\"\n    },\n    resolvedPagePath: \"/home/kali/Desktop/neura-ai (copy 1)/app/api/chat/route.ts\",\n    nextConfigOutput,\n    userland: _home_kali_Desktop_neura_ai_copy_1_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/chat/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjaGF0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjaGF0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2hhdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGa2FsaSUyRkRlc2t0b3AlMkZuZXVyYS1haSUyMChjb3B5JTIwMSklMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRmhvbWUlMkZrYWxpJTJGRGVza3RvcCUyRm5ldXJhLWFpJTIwKGNvcHklMjAxKSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNVO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUdBQXVHO0FBQy9HO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDNko7O0FBRTdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV1cmEtYWkvPzI0MzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL2hvbWUva2FsaS9EZXNrdG9wL25ldXJhLWFpIChjb3B5IDEpL2FwcC9hcGkvY2hhdC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY2hhdC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NoYXRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2NoYXQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvaG9tZS9rYWxpL0Rlc2t0b3AvbmV1cmEtYWkgKGNvcHkgMSkvYXBwL2FwaS9jaGF0L3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2NoYXQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2Fhome%2Fkali%2FDesktop%2Fneura-ai%20(copy%201)%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fkali%2FDesktop%2Fneura-ai%20(copy%201)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/chat/route.ts":
/*!*******************************!*\
  !*** ./app/api/chat/route.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_rate_limit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/rate-limit */ \"(rsc)/./lib/rate-limit.ts\");\n\n\n// Variabel untuk konfigurasi Ollama\nconst OLLAMA_HOST = process.env.OLLAMA_HOST || \"http://localhost:11434\";\nconst DEFAULT_MODEL = process.env.DEFAULT_MODEL || \"qwen2.5:3b\";\nconst OLLAMA_TIMEOUT = 120000; // 120 detik (2 menit) timeout\n// Limiter: 5 requests per minute\nconst limiter = (0,_lib_rate_limit__WEBPACK_IMPORTED_MODULE_1__.rateLimit)({\n    interval: 60 * 1000,\n    uniqueTokenPerInterval: 500\n});\nasync function POST(req) {\n    const ip = req.ip ?? \"127.0.0.1\";\n    const apiKey = req.headers.get(\"Authorization\")?.split(\" \")[1];\n    if (!apiKey) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"API key diperlukan\"\n        }, {\n            status: 401\n        });\n    }\n    // Validasi API key\n    // TODO: Implementasikan validasi API key dengan database\n    try {\n        // Rate limiting\n        const result = await limiter.limit(ip);\n        if (!result.success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Rate limit exceeded\"\n            }, {\n                status: 429\n            });\n        }\n        const { messages, model = DEFAULT_MODEL } = await req.json();\n        // Validasi input\n        if (!messages || !Array.isArray(messages) || messages.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Messages diperlukan dan harus berupa array\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`[INFO] Processing chat request with model: ${model}`);\n        console.log(`[INFO] Message count: ${messages.length}`);\n        // Enkode ReadableStream untuk streaming response\n        const encoder = new TextEncoder();\n        const stream = new TransformStream();\n        const writer = stream.writable.getWriter();\n        // Buat abort controller untuk timeout\n        const controller = new AbortController();\n        const timeoutId = setTimeout(()=>{\n            controller.abort();\n            console.error(\"[ERROR] Request to Ollama timed out after 25s\");\n        }, OLLAMA_TIMEOUT);\n        // Proses asinkron untuk menangani response dari Ollama\n        (async ()=>{\n            try {\n                console.log(\"[INFO] Sending request to Ollama API...\");\n                const response = await fetch(`${OLLAMA_HOST}/api/generate`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        model,\n                        prompt: formatMessages(messages),\n                        stream: true\n                    }),\n                    signal: controller.signal\n                });\n                clearTimeout(timeoutId);\n                if (!response.ok) {\n                    const errorText = await response.text().catch(()=>\"Unknown error\");\n                    const error = `Ollama API returned ${response.status}: ${errorText}`;\n                    console.error(\"[ERROR]\", error);\n                    await writer.write(encoder.encode(`data: ${JSON.stringify({\n                        error\n                    })}\\n\\n`));\n                    await writer.close();\n                    return;\n                }\n                if (!response.body) {\n                    const error = \"No response body from Ollama\";\n                    console.error(\"[ERROR]\", error);\n                    await writer.write(encoder.encode(`data: ${JSON.stringify({\n                        error\n                    })}\\n\\n`));\n                    await writer.close();\n                    return;\n                }\n                console.log(\"[INFO] Streaming response from Ollama...\");\n                const reader = response.body.getReader();\n                const decoder = new TextDecoder();\n                // Stream response ke client\n                try {\n                    while(true){\n                        const { done, value } = await reader.read();\n                        if (done) {\n                            await writer.close();\n                            console.log(\"[INFO] Stream complete\");\n                            break;\n                        }\n                        const chunk = decoder.decode(value, {\n                            stream: true\n                        });\n                        const lines = chunk.split(\"\\n\");\n                        for (const line of lines){\n                            if (line.trim() === \"\") continue;\n                            try {\n                                const data = JSON.parse(line);\n                                if (data.done) {\n                                    await writer.close();\n                                    console.log(\"[INFO] Stream complete (marked as done)\");\n                                    return;\n                                }\n                                // Streaming response chunk\n                                const text = data.response || \"\";\n                                await writer.write(encoder.encode(`data: ${JSON.stringify({\n                                    text\n                                })}\\n\\n`));\n                            } catch (err) {\n                                console.error(\"[ERROR] Failed to parse JSON from Ollama:\", line);\n                                console.error(err);\n                            }\n                        }\n                    }\n                } catch (streamError) {\n                    console.error(\"[ERROR] Stream processing error:\", streamError);\n                    await writer.write(encoder.encode(`data: ${JSON.stringify({\n                        error: \"Error memproses stream respons\"\n                    })}\\n\\n`));\n                    await writer.close();\n                }\n            } catch (error) {\n                clearTimeout(timeoutId);\n                console.error(\"[ERROR] Ollama API error:\", error);\n                let errorMessage = \"Koneksi ke Ollama gagal\";\n                if (error instanceof Error) {\n                    if (error.name === \"AbortError\") {\n                        errorMessage = \"Koneksi ke Ollama timeout setelah 25 detik\";\n                    } else {\n                        errorMessage = error.message;\n                    }\n                }\n                await writer.write(encoder.encode(`data: ${JSON.stringify({\n                    error: errorMessage\n                })}\\n\\n`));\n                await writer.close();\n            }\n        })().catch(async (error)=>{\n            console.error(\"[ERROR] Unhandled promise rejection:\", error);\n            try {\n                await writer.write(encoder.encode(`data: ${JSON.stringify({\n                    error: \"Terjadi kesalahan yang tidak tertangani\"\n                })}\\n\\n`));\n                await writer.close();\n            } catch (e) {\n                console.error(\"[ERROR] Failed to write error to stream:\", e);\n            }\n        });\n        return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(stream.readable, {\n            headers: {\n                \"Content-Type\": \"text/event-stream\",\n                \"Cache-Control\": \"no-cache, no-transform\",\n                \"Connection\": \"keep-alive\"\n            }\n        });\n    } catch (error) {\n        console.error(\"[ERROR] Error processing request:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Terjadi kesalahan internal\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Helper untuk memformat pesan dari format ChatGPT ke format text Ollama\nfunction formatMessages(messages) {\n    // Filter pesan system dan gabungkan dengan prompt\n    const systemPrompt = messages.find((m)=>m.role === \"system\")?.content || \"\";\n    // Ambil semua pesan user dan assistant dalam urutan kronologis\n    const conversation = messages.filter((m)=>m.role === \"user\" || m.role === \"assistant\");\n    // Format pesan dengan jelas\n    let formattedPrompt = systemPrompt ? `${systemPrompt}\\n\\n` : \"\";\n    for (const msg of conversation){\n        const role = msg.role === \"user\" ? \"Human\" : \"Assistant\";\n        formattedPrompt += `${role}: ${msg.content}\\n`;\n    }\n    // Tambahkan token akhir untuk AI\n    formattedPrompt += \"Assistant:\";\n    return formattedPrompt;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/chat/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/rate-limit.ts":
/*!***************************!*\
  !*** ./lib/rate-limit.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rateLimit: () => (/* binding */ rateLimit)\n/* harmony export */ });\nconst ratelimitCache = new Map();\nfunction rateLimit(config) {\n    return {\n        limit: async (identifier)=>{\n            const now = Date.now();\n            const tokenKey = `${identifier}:${Math.floor(now / config.interval)}`;\n            const cachedData = ratelimitCache.get(tokenKey) || {\n                tokens: [],\n                timestamp: now\n            };\n            const { tokens } = cachedData;\n            const limit = config.uniqueTokenPerInterval;\n            // Jika token sudah mencapai limit, rate limit tercapai\n            if (tokens.length >= limit) {\n                const reset = cachedData.timestamp + config.interval;\n                return {\n                    success: false,\n                    limit,\n                    remaining: 0,\n                    reset\n                };\n            }\n            // Tambahkan token baru\n            tokens.push(identifier);\n            // Update cache\n            ratelimitCache.set(tokenKey, {\n                tokens,\n                timestamp: cachedData.timestamp\n            });\n            // Bersihkan cache yang sudah expired\n            const tokensToClear = [];\n            for (const [key, value] of ratelimitCache.entries()){\n                if (now - value.timestamp > config.interval) {\n                    tokensToClear.push(key);\n                }\n            }\n            for (const key of tokensToClear){\n                ratelimitCache.delete(key);\n            }\n            return {\n                success: true,\n                limit,\n                remaining: limit - tokens.length,\n                reset: cachedData.timestamp + config.interval\n            };\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcmF0ZS1saW1pdC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRUEsTUFBTUEsaUJBQWlCLElBQUlDO0FBRXBCLFNBQVNDLFVBQVVDLE1BQXVCO0lBQy9DLE9BQU87UUFDTEMsT0FBTyxPQUFPQztZQUNaLE1BQU1DLE1BQU1DLEtBQUtELEdBQUc7WUFDcEIsTUFBTUUsV0FBVyxDQUFDLEVBQUVILFdBQVcsQ0FBQyxFQUFFSSxLQUFLQyxLQUFLLENBQUNKLE1BQU1ILE9BQU9RLFFBQVEsRUFBRSxDQUFDO1lBRXJFLE1BQU1DLGFBQWFaLGVBQWVhLEdBQUcsQ0FBQ0wsYUFBYTtnQkFDakRNLFFBQVEsRUFBRTtnQkFDVkMsV0FBV1Q7WUFDYjtZQUVBLE1BQU0sRUFBRVEsTUFBTSxFQUFFLEdBQUdGO1lBQ25CLE1BQU1SLFFBQVFELE9BQU9hLHNCQUFzQjtZQUUzQyx1REFBdUQ7WUFDdkQsSUFBSUYsT0FBT0csTUFBTSxJQUFJYixPQUFPO2dCQUMxQixNQUFNYyxRQUFRTixXQUFXRyxTQUFTLEdBQUdaLE9BQU9RLFFBQVE7Z0JBQ3BELE9BQU87b0JBQ0xRLFNBQVM7b0JBQ1RmO29CQUNBZ0IsV0FBVztvQkFDWEY7Z0JBQ0Y7WUFDRjtZQUVBLHVCQUF1QjtZQUN2QkosT0FBT08sSUFBSSxDQUFDaEI7WUFFWixlQUFlO1lBQ2ZMLGVBQWVzQixHQUFHLENBQUNkLFVBQVU7Z0JBQzNCTTtnQkFDQUMsV0FBV0gsV0FBV0csU0FBUztZQUNqQztZQUVBLHFDQUFxQztZQUNyQyxNQUFNUSxnQkFBZ0IsRUFBRTtZQUN4QixLQUFLLE1BQU0sQ0FBQ0MsS0FBS0MsTUFBTSxJQUFJekIsZUFBZTBCLE9BQU8sR0FBSTtnQkFDbkQsSUFBSXBCLE1BQU1tQixNQUFNVixTQUFTLEdBQUdaLE9BQU9RLFFBQVEsRUFBRTtvQkFDM0NZLGNBQWNGLElBQUksQ0FBQ0c7Z0JBQ3JCO1lBQ0Y7WUFFQSxLQUFLLE1BQU1BLE9BQU9ELGNBQWU7Z0JBQy9CdkIsZUFBZTJCLE1BQU0sQ0FBQ0g7WUFDeEI7WUFFQSxPQUFPO2dCQUNMTCxTQUFTO2dCQUNUZjtnQkFDQWdCLFdBQVdoQixRQUFRVSxPQUFPRyxNQUFNO2dCQUNoQ0MsT0FBT04sV0FBV0csU0FBUyxHQUFHWixPQUFPUSxRQUFRO1lBQy9DO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV1cmEtYWkvLi9saWIvcmF0ZS1saW1pdC50cz8yMmM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJhdGVsaW1pdENvbmZpZywgUmF0ZWxpbWl0LCBSYXRlbGltaXRSZXNwb25zZSB9IGZyb20gJy4vdHlwZXMnO1xuXG5jb25zdCByYXRlbGltaXRDYWNoZSA9IG5ldyBNYXA8c3RyaW5nLCB7IHRva2Vuczogc3RyaW5nW10sIHRpbWVzdGFtcDogbnVtYmVyIH0+KCk7XG5cbmV4cG9ydCBmdW5jdGlvbiByYXRlTGltaXQoY29uZmlnOiBSYXRlbGltaXRDb25maWcpOiBSYXRlbGltaXQge1xuICByZXR1cm4ge1xuICAgIGxpbWl0OiBhc3luYyAoaWRlbnRpZmllcjogc3RyaW5nKTogUHJvbWlzZTxSYXRlbGltaXRSZXNwb25zZT4gPT4ge1xuICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgIGNvbnN0IHRva2VuS2V5ID0gYCR7aWRlbnRpZmllcn06JHtNYXRoLmZsb29yKG5vdyAvIGNvbmZpZy5pbnRlcnZhbCl9YDtcblxuICAgICAgY29uc3QgY2FjaGVkRGF0YSA9IHJhdGVsaW1pdENhY2hlLmdldCh0b2tlbktleSkgfHwge1xuICAgICAgICB0b2tlbnM6IFtdLFxuICAgICAgICB0aW1lc3RhbXA6IG5vd1xuICAgICAgfTtcblxuICAgICAgY29uc3QgeyB0b2tlbnMgfSA9IGNhY2hlZERhdGE7XG4gICAgICBjb25zdCBsaW1pdCA9IGNvbmZpZy51bmlxdWVUb2tlblBlckludGVydmFsO1xuICAgICAgXG4gICAgICAvLyBKaWthIHRva2VuIHN1ZGFoIG1lbmNhcGFpIGxpbWl0LCByYXRlIGxpbWl0IHRlcmNhcGFpXG4gICAgICBpZiAodG9rZW5zLmxlbmd0aCA+PSBsaW1pdCkge1xuICAgICAgICBjb25zdCByZXNldCA9IGNhY2hlZERhdGEudGltZXN0YW1wICsgY29uZmlnLmludGVydmFsO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIGxpbWl0LFxuICAgICAgICAgIHJlbWFpbmluZzogMCxcbiAgICAgICAgICByZXNldFxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICAvLyBUYW1iYWhrYW4gdG9rZW4gYmFydVxuICAgICAgdG9rZW5zLnB1c2goaWRlbnRpZmllcik7XG4gICAgICBcbiAgICAgIC8vIFVwZGF0ZSBjYWNoZVxuICAgICAgcmF0ZWxpbWl0Q2FjaGUuc2V0KHRva2VuS2V5LCB7XG4gICAgICAgIHRva2VucyxcbiAgICAgICAgdGltZXN0YW1wOiBjYWNoZWREYXRhLnRpbWVzdGFtcFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIC8vIEJlcnNpaGthbiBjYWNoZSB5YW5nIHN1ZGFoIGV4cGlyZWRcbiAgICAgIGNvbnN0IHRva2Vuc1RvQ2xlYXIgPSBbXTtcbiAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHJhdGVsaW1pdENhY2hlLmVudHJpZXMoKSkge1xuICAgICAgICBpZiAobm93IC0gdmFsdWUudGltZXN0YW1wID4gY29uZmlnLmludGVydmFsKSB7XG4gICAgICAgICAgdG9rZW5zVG9DbGVhci5wdXNoKGtleSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgZm9yIChjb25zdCBrZXkgb2YgdG9rZW5zVG9DbGVhcikge1xuICAgICAgICByYXRlbGltaXRDYWNoZS5kZWxldGUoa2V5KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgbGltaXQsXG4gICAgICAgIHJlbWFpbmluZzogbGltaXQgLSB0b2tlbnMubGVuZ3RoLFxuICAgICAgICByZXNldDogY2FjaGVkRGF0YS50aW1lc3RhbXAgKyBjb25maWcuaW50ZXJ2YWxcbiAgICAgIH07XG4gICAgfVxuICB9O1xufSAiXSwibmFtZXMiOlsicmF0ZWxpbWl0Q2FjaGUiLCJNYXAiLCJyYXRlTGltaXQiLCJjb25maWciLCJsaW1pdCIsImlkZW50aWZpZXIiLCJub3ciLCJEYXRlIiwidG9rZW5LZXkiLCJNYXRoIiwiZmxvb3IiLCJpbnRlcnZhbCIsImNhY2hlZERhdGEiLCJnZXQiLCJ0b2tlbnMiLCJ0aW1lc3RhbXAiLCJ1bmlxdWVUb2tlblBlckludGVydmFsIiwibGVuZ3RoIiwicmVzZXQiLCJzdWNjZXNzIiwicmVtYWluaW5nIiwicHVzaCIsInNldCIsInRva2Vuc1RvQ2xlYXIiLCJrZXkiLCJ2YWx1ZSIsImVudHJpZXMiLCJkZWxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/rate-limit.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2Fhome%2Fkali%2FDesktop%2Fneura-ai%20(copy%201)%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fkali%2FDesktop%2Fneura-ai%20(copy%201)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();